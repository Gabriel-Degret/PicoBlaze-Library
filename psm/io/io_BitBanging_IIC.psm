; EMACS settings: -*-  tab-width: 2; indent-tabs-mode: t -*-
; vim: tabstop=2:shiftwidth=2:noexpandtab
; kate: tab-width 2; replace-tabs off; indent-width 2;
; 
; ==============================================================================
; Assembler-Code:		Bit-Banging IIC (Inter-Integrated Circuit, I2C) functions for PicoBlaze
; 
; Authors:					Patrick Lehmann
;
; Description:
; ------------------------------------
;	public functions:
;		__BB_IIC_EnableRaw
;		__BB_IIC_DisableRaw
;		__BB_IIC_Initialise
;		__BB_IIC_SendStartCond
;		__BB_IIC_SendRestartCond
;		__BB_IIC_SendStopCond
;		__BB_IIC_SendByte
;		__BB_IIC_SendAck
;		__BB_IIC_SendNAck
;		__BB_IIC_ReceiveByte
;		__BB_IIC_ReceiveAck
;		__BB_IIC_Abort
; 
;	private functions:
;		_BB_IIC_ClockToZ
;		_BB_IIC_DataToZ
;		_BB_IIC_ClockToLow
;		_BB_IIC_DataToLow
;		_BB_IIC_ReceiveBit
;		_BB_IIC_ClockPulse
;		_BB_IIC_Delay_5us
;		_BB_IIC_Delay_4us
;		_BB_IIC_Delay_2us
;   
; License:
; ==============================================================================
; Copyright 2007-2014 Technische Universitaet Dresden - Germany,
;										 Chair for VLSI-Design, Diagnostics and Architecture
; 
; Licensed under the Apache License, Version 2.0 (the "License");
; you may not use this file except in compliance with the License.
; You may obtain a copy of the License at
; 
;		http://www.apache.org/licenses/LICENSE-2.0
; 
; Unless required by applicable law or agreed to in writing, software
; distributed under the License is distributed on an "AS IS" BASIS,
; WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
; See the License for the specific language governing permissions and
; limitations under the License.
; ==============================================================================
;
;
; BB_IIC macros
; ===============================================
;PRAGMA function _bb_iic_enableraw begin
__BB_IIC_EnableRaw:						INPUT			REG_TMP_0,	IPORT_GPIO_DATAOUT
															OR				REG_TMP_0,	GPIO_OPIN_RAW_BB_IIC
															OUTPUT		REG_TMP_0,	OPORT_GPIO_DATAOUT
															RETURN
;PRAGMA function end
;
;PRAGMA function _bb_iic_disableraw begin
__BB_IIC_DisableRaw:					INPUT			REG_TMP_0,	IPORT_GPIO_DATAOUT
															AND				REG_TMP_0,	~GPIO_OPIN_RAW_BB_IIC
															OUTPUT		REG_TMP_0,	OPORT_GPIO_DATAOUT
															RETURN
;PRAGMA function end
;
;PRAGMA function _bb_iic_initialise begin
__BB_IIC_Initialise:					LOAD			REG_TMP_0,	BBIO_IOPIN_IIC_CLOCK
															OR				REG_TMP_0,	BBIO_IOPIN_IIC_DATA
															OUTPUT		REG_TMP_0,	OPORT_BBIO_DATAOUT
															RETURN
;PRAGMA function end
;
;PRAGMA function _bb_iic_sendstartcond begin
__BB_IIC_SendStartCond:				;
__BB_IIC_SendRestartCond:			CALL			_BB_IIC_DataToZ
															CALL			_BB_IIC_ClockToZ
															CALL			_BB_IIC_Delay_5us
															CALL			_BB_IIC_DataToLow
															CALL			_BB_IIC_Delay_4us
															JUMP			_BB_IIC_ClockToLow				; tail call elimination
;PRAGMA function end
;
;PRAGMA function _bb_iic_sendstopcond begin
__BB_IIC_SendStopCond:				CALL			_BB_IIC_DataToLow
															CALL			_BB_IIC_Delay_5us
															CALL			_BB_IIC_ClockToZ
															CALL			_BB_IIC_Delay_4us
															JUMP			_BB_IIC_DataToZ						; tail call elimination
;PRAGMA function end
;
;PRAGMA function _bb_iic_sendbyte begin
__BB_IIC_SendByte:						LOAD			REG_TMP_0,	10000000'b
	_BB_IIC_SendByte_Loop:			TEST			REG_ARG_0,	REG_TMP_0
															JUMP NZ,	_BB_IIC_Transmit_1
	_BB_IIC_Transmit_0:					CALL			_BB_IIC_DataToLow
															JUMP			_BB_IIC_Transmit_Clock
	_BB_IIC_Transmit_1:					CALL			_BB_IIC_DataToZ
	_BB_IIC_Transmit_Clock:			CALL			_BB_IIC_ClockPulse
															SR0				REG_TMP_0
															JUMP NC,	_BB_IIC_SendByte_Loop
															RETURN
;PRAGMA function end
;
;PRAGMA function _bb_iic_sendack begin
__BB_IIC_SendAck:							CALL			_BB_IIC_DataToLow
															JUMP			_BB_IIC_ClockPulse			; tail call elimination
;PRAGMA function end
;
;PRAGMA function _bb_iic_sendnack begin
__BB_IIC_SendNAck:						CALL			_BB_IIC_DataToZ
															JUMP			_BB_IIC_ClockPulse			; tail call elimination
;PRAGMA function end
;
;PRAGMA function _bb_iic_receivebyte begin
__BB_IIC_ReceiveByte:					LOAD			REG_TMP_0,	8'd
	_BB_IIC_ReceiveByte_Loop:		CALL			_BB_IIC_ReceiveBit
															SUB				REG_TMP_0,	1'd
															JUMP NZ,	_BB_IIC_ReceiveByte_Loop
															RETURN
;PRAGMA function end
;
;PRAGMA function _bb_iic_receiveack begin
__BB_IIC_ReceiveAck:					CALL			_BB_IIC_ReceiveBit
															TEST			REG_ARG_0,	00000001'b
															RETURN
;PRAGMA function end
;
;PRAGMA function _bb_iic_abort begin
__BB_IIC_Abort:								CALL			__BB_IIC_Initialise
															LOAD			REG_TMP_0,	1'd
															SR0				REG_TMP_0
															RETURN
;PRAGMA function end
;
; ==============================================================================================================================================================
; private functions
; ==============================================================================================================================================================
;PRAGMA function bb_iic_clocktoz begin
_BB_IIC_ClockToZ:							INPUT			REG_TMP_1,	IPORT_BBIO_DATAOUT
															OR				REG_TMP_1,	BBIO_IOPIN_IIC_CLOCK
															OUTPUT		REG_TMP_1,	OPORT_BBIO_DATAOUT
	_BB_IIC_ClockToZ_Loop:			INPUT			REG_TMP_1,	IPORT_BBIO_DATAIN
															TEST			REG_TMP_1,	BBIO_IOPIN_IIC_CLOCK
															JUMP Z,		_BB_IIC_ClockToZ_Loop
															RETURN
;PRAGMA function end
;
;PRAGMA function bb_iic_clocktolow begin
_BB_IIC_ClockToLow:						INPUT			REG_TMP_1,	IPORT_BBIO_DATAOUT
															AND				REG_TMP_1,	~BBIO_IOPIN_IIC_CLOCK
															OUTPUT		REG_TMP_1,	OPORT_BBIO_DATAOUT
															JUMP			_BB_IIC_Delay_5us										; tail call elimination
;PRAGMA function end
;
;PRAGMA function bb_iic_datatoz begin
_BB_IIC_DataToZ:							INPUT			REG_TMP_1,	IPORT_BBIO_DATAOUT
															OR				REG_TMP_1,	BBIO_IOPIN_IIC_DATA
															OUTPUT		REG_TMP_1,	OPORT_BBIO_DATAOUT
															RETURN
;PRAGMA function end
;
;PRAGMA function bb_iic_datatolow begin
_BB_IIC_DataToLow:						INPUT			REG_TMP_1,	IPORT_BBIO_DATAOUT
															AND				REG_TMP_1,	~BBIO_IOPIN_IIC_DATA
															OUTPUT		REG_TMP_1,	OPORT_BBIO_DATAOUT
															RETURN
;PRAGMA function end
;
;PRAGMA function bb_iic_receivebit begin
_BB_IIC_ReceiveBit:						CALL			_BB_IIC_DataToZ
															CALL			_BB_IIC_Delay_5us
															CALL			_BB_IIC_ClockToZ
															CALL			_BB_IIC_Delay_2us
															INPUT			REG_TMP_1,	IPORT_BBIO_DATAIN
															TEST			REG_TMP_1,	BBIO_IOPIN_IIC_DATA
															SLA				REG_ARG_0
															CALL			_BB_IIC_Delay_2us
															JUMP			_BB_IIC_ClockToLow				; tail call elimination
;PRAGMA function end
;
;PRAGMA function bb_iic_clockpulse begin
_BB_IIC_ClockPulse:						CALL				_BB_IIC_Delay_5us
															CALL				_BB_IIC_ClockToZ
															CALL				_BB_IIC_Delay_4us
															JUMP				_BB_IIC_ClockToLow			; tail call elimination
;PRAGMA function end
;
;PRAGMA function bb_iic_delay_5us begin
_BB_IIC_Delay_5us:						CALL			__Sleep_1_us
_BB_IIC_Delay_4us:						CALL			__Sleep_1_us
															CALL			__Sleep_1_us
_BB_IIC_Delay_2us:						CALL			__Sleep_1_us
															JUMP			__Sleep_1_us							; tail call elimination
															
;PRAGMA function end
;
